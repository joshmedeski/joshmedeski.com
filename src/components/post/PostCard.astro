---
import { categories } from "../../models/Category.astro";
import type { Category } from "../../models/Category.astro";
import type { Post } from "../../models/Post.astro";
import type { MarkdownInstance } from "astro";
import clsx from "clsx";

export interface Props extends MarkdownInstance<Post> {}
const {
  url,
  frontmatter: { title, description, pubDate, categorySlug, heroImage },
} = Astro.props;
const cat = categories.find((cat) => cat.slug === categorySlug) as Category;
---

<a
  href={url}
  class="flex flex-col justify-between rounded-md shadow-md"
  style={{ backgroundColor: cat?.style?.themeColor }}
>
  <div>
    {
      heroImage && (
        <img
          src={heroImage}
          alt={title}
          class="aspect-video w-full rounded-t-md"
          style={{ backgroundColor: cat?.style?.themeColor }}
        />
      )
    }
  </div>

  <div
    class={clsx(
      "flex flex-wrap justify-between font-medium tracking-wide text-sm",
      "px-2 py-1 text-[rgba(0,0,0,0.7)]"
    )}
  >
    <div class="flex items-center">
      <cat.icon class="w-4 mr-2" />
      <p class="mr-2 block">
        {cat.title}
      </p>
    </div>
    <time datetime={pubDate}>
      {new Date(pubDate).toLocaleDateString("en-US", { dateStyle: "medium" })}
    </time>
  </div>

  <div class="flex flex-1 flex-col justify-end rounded-b-md px-2 py-4">
    <h3
      class="mx-auto mb-1 mb-2 flex max-w-[90%] flex-1 flex-col justify-center text-center text-xl font-extrabold leading-none"
    >
      <span>{title}</span>
    </h3>
    <p class="text-sm text-slate-500">{description}</p>
  </div>
</a>
