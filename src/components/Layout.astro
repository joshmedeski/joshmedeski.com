---
import '../styles/global.css'
import Footer from './LayoutFooter.astro'
import Head from './LayoutHead.astro'
import type { Props as HeadProps } from './LayoutHead.astro'
import Header from './LayoutHeader.astro'
import clsx from 'clsx'

interface Props extends HeadProps {
  hideCta?: boolean
  overlapHeader?: boolean
}
const props = Astro.props
---

<!DOCTYPE html>
<html lang="en">
  <Head {...props} />
  <body class="relative flex min-h-screen flex-col justify-between text-white bg-black">
    <header class="z-20">
      <Header themeColor={props.themeColor} />
    </header>

    <main class={clsx(props.overlapHeader && `-mt-[104px] z-10`)}>
      <slot />
    </main>
    <Footer hideCta={props.hideCta} />

    <script is:inline>
      const getTheme = () => {
        return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';
      }
      document.documentElement.setAttribute('data-theme', getTheme());

      window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', event => {
        const theme = event.matches ? 'dark' : 'light';
        document.documentElement.setAttribute('data-theme', theme);
      });
      document.addEventListener('astro:page-load', ()=>{
        document.documentElement.setAttribute('data-theme', getTheme());
      })
      document.addEventListener('astro:before-swap', event => {
          function setDarkMode(document) {
            window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light'
            document.documentElement.dataset.theme = theme;
          }
        setDarkMode(event.newDocument);
      });

      //document.addEventListener('astro:beforeload', ()=>{
      //  document.documentElement.setAttribute('data-theme', getTheme());
      //})
    </script>
  </body>
</html>
